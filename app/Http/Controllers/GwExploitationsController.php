<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\GwExploitation;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\DB;
use Exception;

class GwExploitationsController extends Controller
{

    /**
     * Display a listing of the gw exploitations.
     *
     * @return Illuminate\View\View
     */
    public function index()
    {
        $gwExploitations = DB::table('hientrangktndd')
            ->select('*')
            ->addSelect(DB::raw('st_x(geom) as gx'), DB::raw('st_y(geom) as gy'))
            ->paginate(25);
        $monitoring_networks = DB::table('monitoring_network')
            ->select('*')
            ->orderBy('id', 'DESC')->get();
        return view('home.gw_exploitations.index', ['gwExploitations' => $gwExploitations, 'monitoring_networks' => $monitoring_networks,'id_active' => '-1']);

    }

    /**
     * Show the form for creating a new gw exploitation.
     *
     * @return Illuminate\View\View
     */
    public function create()
    {
        
        
        return view('gw_exploitations.create');
    }

    /**
     * Store a new gw exploitation in the storage.
     *
     * @param Illuminate\Http\Request $request
     *
     * @return Illuminate\Http\RedirectResponse | Illuminate\Routing\Redirector
     */
    public function store(Request $request)
    {
        try {
            
            $data = $this->getData($request);
            
            GwExploitation::create($data);

            return redirect()->route('gw_exploitations.gw_exploitation.index')
                             ->with('success_message', trans('gw_exploitations.model_was_added'));

        } catch (Exception $exception) {

            return back()->withInput()
                         ->withErrors(['unexpected_error' => trans('gw_exploitations.unexpected_error')]);
        }
    }

    /**
     * Display the specified gw exploitation.
     *
     * @param int $id
     *
     * @return Illuminate\View\View
     */
    public function show($id)
    {
        $gwExploitation = DB::table('hientrangktndd')
            ->select('*')
            ->addSelect(DB::raw('st_x(geom) as gx'), DB::raw('st_y(geom) as gy'))
            ->where('id_hientrang', '=', $id)->get();
        return view('home.gw_exploitations.show_general_info', ['gwExploitation' => $gwExploitation[0]]);
    }

    public function show_general_info($id)
    {
        $gwExploitation = DB::table('hientrangktndd')
            ->select('*')
            ->addSelect(DB::raw('st_x(geom) as gx'), DB::raw('st_y(geom) as gy'))
            ->where('id_hientrang', '=', $id)->get();
        return view('home.gw_exploitations.show_general_info', ['gwExploitation' => $gwExploitation[0]]);
    }

    public function show_exploitation_vl($id)
    {
        $gwExploitation = DB::table('hientrangktndd')
            ->select('*')
            ->addSelect(DB::raw('st_x(geom) as gx'), DB::raw('st_y(geom) as gy'))
            ->where('id_hientrang', '=', $id)->get();
        return view('home.gw_exploitations.show_exploitation_vl', ['gwExploitation' => $gwExploitation[0]]);
    }

    public function show_exploitation_wl($id)
    {
        $gwExploitation = DB::table('hientrangktndd')
            ->select('*')
            ->addSelect(DB::raw('st_x(geom) as gx'), DB::raw('st_y(geom) as gy'))
            ->where('id_hientrang', '=', $id)->get();
        return view('home.gw_exploitations.show_exploitation_wl', ['gwExploitation' => $gwExploitation[0]]);
    }
    public function ex_ajax_vl(Request $request)
    {
        $gwExploitation = DB::table('hientrangktndd')
            ->select('*')
            ->addSelect(DB::raw('st_x(geom) as gx'), DB::raw('st_y(geom) as gy'))
            ->where('id_hientrang', '=', $id)->get();
        return view('home.gw_exploitations.show_exploitation_vl', ['gwExploitation' => $gwExploitation[0]]);
    }

    public function ex_ajax_wl(Request $request)
    {
        $gwExploitation = DB::table('hientrangktndd')
            ->select('*')
            ->addSelect(DB::raw('st_x(geom) as gx'), DB::raw('st_y(geom) as gy'))
            ->where('id_hientrang', '=', $id)->get();
        return view('home.gw_exploitations.show_exploitation_wl', ['gwExploitation' => $gwExploitation[0]]);
    }

    /**
     * Show the form for editing the specified gw exploitation.
     *
     * @param int $id
     *
     * @return Illuminate\View\View
     */
    public function edit($id)
    {
        $gwExploitation = GwExploitation::findOrFail($id);
        

        return view('gw_exploitations.edit', compact('gwExploitation'));
    }

    /**
     * Update the specified gw exploitation in the storage.
     *
     * @param  int $id
     * @param Illuminate\Http\Request $request
     *
     * @return Illuminate\Http\RedirectResponse | Illuminate\Routing\Redirector
     */
    public function update($id, Request $request)
    {
        try {
            
            $data = $this->getData($request);
            
            $gwExploitation = GwExploitation::findOrFail($id);
            $gwExploitation->update($data);

            return redirect()->route('gw_exploitations.gw_exploitation.index')
                             ->with('success_message', trans('gw_exploitations.model_was_updated'));

        } catch (Exception $exception) {

            return back()->withInput()
                         ->withErrors(['unexpected_error' => trans('gw_exploitations.unexpected_error')]);
        }        
    }

    /**
     * Remove the specified gw exploitation from the storage.
     *
     * @param  int $id
     *
     * @return Illuminate\Http\RedirectResponse | Illuminate\Routing\Redirector
     */
    public function destroy($id)
    {
        try {
            $gwExploitation = GwExploitation::findOrFail($id);
            $gwExploitation->delete();

            return redirect()->route('gw_exploitations.gw_exploitation.index')
                             ->with('success_message', trans('gw_exploitations.model_was_deleted'));

        } catch (Exception $exception) {

            return back()->withInput()
                         ->withErrors(['unexpected_error' => trans('gw_exploitations.unexpected_error')]);
        }
    }

    
    /**
     * Get the request's data from the request.
     *
     * @param Illuminate\Http\Request\Request $request 
     * @return array
     */
    protected function getData(Request $request)
    {
        $rules = [
            'id_hientrang' => 'required|string|min:1',
            'sohieu_kt' => 'string|min:1|nullable',
            'chusohuu' => 'string|min:1|nullable',
            'toado_x' => 'double|nullable',
            'toado_y' => 'double|nullable',
            'caodo_z' => 'double|nullable',
            'tinh' => 'string|min:1|nullable',
            'huyen' => 'string|min:1|nullable',
            'xa' => 'string|min:1|nullable',
            'thon' => 'string|min:1|nullable',
            'nam_kt' => 'integer|nullable',
            'cqcapphep' => 'string|min:1|nullable',
            'chieusaugieng' => 'double|nullable',
            'duongkinhgieng' => 'double|nullable',
            'tangchuanuoc' => 'string|min:1|nullable',
            'luuluong_kt' => 'double|nullable',
            'chedo_kt' => 'string|min:1|nullable',
            'mucdich_sd' => 'string|min:1|nullable',
            'geom' => 'string|min:1|nullable',
     
        ];

        
        $data = $request->validate($rules);




        return $data;
    }

}
